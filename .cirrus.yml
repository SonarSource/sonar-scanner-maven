#
# ENV VARIABLES
#
env:
  ### Shared variables
  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]
  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/SonarSource-sonar-scanner-maven-private-reader access_token]
  ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/SonarSource-sonar-scanner-maven-private-reader access_token]
  ARTIFACTORY_DEPLOY_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer
  ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/SonarSource-sonar-scanner-maven-qa-deployer access_token]
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa

  ARTIFACTORY_PROMOTE_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter access_token]

  ### Project variables
  DEPLOY_PULL_REQUEST: true

#
# RE-USABLE CONFIGS
#
container_definition: &CONTAINER_DEFINITION
  image: ${CIRRUS_AWS_ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/base:j17-m3.8.8-latest
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  region: eu-central-1
  namespace: default

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")


orchestrator_cache_definition: &ORCHESTRATOR_CACHE_DEFINITION
  set_orchestrator_home_script: |
    # Check if SQ_VERSION exists and create an intermediary variable
    if [ -n "$SQ_VERSION" ]; then
        FOLDER="${SQ_VERSION}"
    else
        FOLDER="DEFAULT"
    fi

    CURRENT_MONTH=$(date +"%B")
    echo "CURRENT_MONTH=${CURRENT_MONTH}" >> $CIRRUS_ENV
    echo "ORCHESTRATOR_HOME=${CIRRUS_WORKING_DIR}/orchestrator/${FOLDER}/${CURRENT_MONTH}" >> $CIRRUS_ENV
    echo "FOLDER=${FOLDER}" >> $CIRRUS_ENV
  mkdir_orchestrator_home_script: |
    echo "Create dir ${ORCHESTRATOR_HOME} if needed"
    mkdir -p ${ORCHESTRATOR_HOME}
  orchestrator_cache:
    folder: ${ORCHESTRATOR_HOME}
    fingerprint_script: echo ${FOLDER}-${CURRENT_MONTH}
    reupload_on_changes: "true"

#
# TASKS
#
build_task:
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 1
    memory: 2G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
    SCANNER_VERSION: LATEST
    SIGN_KEY: VAULT[development/kv/data/sign data.key]
    PGP_PASSPHRASE: VAULT[development/kv/data/sign data.passphrase]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  script:
    - source cirrus-env BUILD
    - regular_mvn_build_deploy_analyze
  cleanup_before_cache_script:
    - cleanup_maven_repository

sonar_shadow_scan_and_issue_replication_task:
  depends_on:
    - build
  # Only run when triggered by the cirrus-ci cron job named "nightly"
  only_if: $CIRRUS_CRON == "nightly"
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 1
    memory: 2G
  env:
    SCANNER_VERSION: LATEST
    SONAR_PROJECT_KEY: "org.sonarsource.scanner.maven:sonar-scanner-maven"
    SHADOW_ORGANIZATION: "sonarsource"
    SHADOW_PROJECT_KEY: "SonarSource_sonar-scanner-maven"
    # to replicate issue states from next
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
    matrix:
      - name: "sonarcloud.io"
        SHADOW_SONAR_TOKEN: VAULT[development/kv/data/sonarcloud data.token]
        SHADOW_SONAR_HOST_URL: "https://sonarcloud.io"
      - name: "sonarqube.us"
        SHADOW_SONAR_TOKEN: VAULT[development/kv/data/sonarqube-us data.token]
        SHADOW_SONAR_HOST_URL: "https://sonarqube.us"
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  script:
    - source cirrus-env BUILD
    - ./shadow-scan-and-issue-replication.sh
  cleanup_before_cache_script:
    - cleanup_maven_repository

mend_scan_task:
  depends_on:
    - build
  # run only on master and long-living branches
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "mend-.*")
  eks_container:
    image: ${CIRRUS_AWS_ACCOUNT}.dkr.ecr.eu-central-1.amazonaws.com/base:j21-latest
    region: eu-central-1
    cluster_name: ${CIRRUS_CLUSTER_NAME}
    namespace: default
    cpu: 4
    memory: 2G
  env:
    WS_APIKEY: VAULT[development/kv/data/mend data.apikey]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  mend_script:
    - source cirrus-env QA
    - source set_maven_build_version $BUILD_NUMBER
    - mvn clean install -DskipTests -B
    - source ws_scan.sh
  cleanup_before_cache_script: cleanup_maven_repository
  allow_failures: "true"
  always:
    ws_scan_artifacts:
      path: "whitesource/**/*"

qa_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 6
    memory: 6G
  env:
    matrix:
      - SQ_VERSION: DEV
        MAVEN_VERSION: 4.0.0-rc-2
      - SQ_VERSION: DEV
        MAVEN_VERSION: 3.9.4
      - SQ_VERSION: DEV
        MAVEN_VERSION: 3.8.8
      - SQ_VERSION: DEV
        MAVEN_VERSION: 3.6.3
      - SQ_VERSION: LATEST_RELEASE
        MAVEN_VERSION: 3.9.4
      - SQ_VERSION: LATEST_RELEASE
        MAVEN_VERSION: 3.8.8
      - SQ_VERSION: LATEST_RELEASE
        MAVEN_VERSION: 3.6.3
      - SQ_VERSION: LATEST_RELEASE[9.9]
        MAVEN_VERSION: 3.9.4
      - SQ_VERSION: LATEST_RELEASE[9.9]
        MAVEN_VERSION: 3.8.8
      - SQ_VERSION: LATEST_RELEASE[9.9]
        MAVEN_VERSION: 3.6.3
      - SQ_VERSION: LATEST_RELEASE[9.9]
        MAVEN_VERSION: 3.5.4
      - SQ_VERSION: LATEST_RELEASE[9.9]
        MAVEN_VERSION: 3.3.9
      - SQ_VERSION: LATEST_RELEASE[9.9]
        MAVEN_VERSION: 3.2.5
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  <<: *ORCHESTRATOR_CACHE_DEFINITION
  qa_script:
    - ./cirrus/cirrus-qa.sh
  cleanup_before_cache_script:
    - cleanup_maven_repository
    - ./cirrus/clean-orchestrator-cache.sh

promote_task:
  depends_on:
    - sonar_shadow_scan_and_issue_replication
    - qa
  <<: *ONLY_SONARSOURCE_QA
  eks_container:
    <<: *CONTAINER_DEFINITION
    cpu: 0.5
    memory: 500M
  env:
    GITHUB_TOKEN: VAULT[development/github/token/SonarSource-sonar-scanner-maven-promotion token]
  maven_cache:
    folder: $CIRRUS_WORKING_DIR/.m2/repository
  script:
    - cirrus_promote_maven
  cleanup_before_cache_script:
    - cleanup_maven_repository
